name: debug cloudflared ssh

on:
  workflow_dispatch:

jobs:
  debug:
    name: Debug Cloudflared SSH per VPS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host_idx: [0,1,2,3,4]
    env:
      CF_TOKEN_ID: ${{ secrets.CLOUDFLARED_TOKEN_ID }}
      CF_TOKEN_SECRET: ${{ secrets.CLOUDFLARED_TOKEN_SECRET }}
      SSH_USER: ${{ secrets.SSH_USER }}
    steps:
      - name: Install cloudflared
        run: |
          mkdir -p /opt/bin
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 \
            -o /opt/bin/cloudflared
          chmod +x /opt/bin/cloudflared

      - name: Determine target host
        id: host
        run: |
          case ${{ matrix.host_idx }} in
            0) echo "HOST=${{ secrets.SSH_HOST_0 }}" >> $GITHUB_ENV ;;
            1) echo "HOST=${{ secrets.SSH_HOST_1 }}" >> $GITHUB_ENV ;;
            2) echo "HOST=${{ secrets.SSH_HOST_2 }}" >> $GITHUB_ENV ;;
            3) echo "HOST=${{ secrets.SSH_HOST_3 }}" >> $GITHUB_ENV ;;
            4) echo "HOST=${{ secrets.SSH_HOST_4 }}" >> $GITHUB_ENV ;;
          esac
          echo "Debugging host #${{ matrix.host_idx }} -> $HOST"

      - name: Prepare SSH config
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}"   > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519 ~/.ssh/known_hosts
          cat <<EOF > ~/.ssh/config
          Host vps
            HostName $HOST
            User $SSH_USER
            ProxyCommand /opt/bin/cloudflared access ssh \
              --hostname %h \
              --service-token-id $CF_TOKEN_ID \
              --service-token-secret $CF_TOKEN_SECRET
          EOF
          chmod 600 ~/.ssh/config

      - name: Get file from VPS
        run: |
          rsync -avz vps:/tmp/sign ./
          ssh -v vps "cat /tmp/sign"
          
